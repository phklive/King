Evm clean: Evm {
    evm context: EvmContext {
        inner: InnerEvmContext {
            env: Env {
                cfg: CfgEnv {
                    chain_id: 1,
                    kzg_settings: Default,
                    perf_analyse_created_bytecodes: Analyse,
                    limit_contract_code_size: None,
                },
                block: BlockEnv {
                    number: 0,
                    coinbase: 0x0000000000000000000000000000000000000000,
                    timestamp: 1,
                    gas_limit: 115792089237316195423570985008687907853269984665640564039457584007913129639935,
                    basefee: 0,
                    difficulty: 0,
                    prevrandao: Some(
                        0x0000000000000000000000000000000000000000000000000000000000000000,
                    ),
                    blob_excess_gas_and_price: Some(
                        BlobExcessGasAndPrice {
                            excess_blob_gas: 0,
                            blob_gasprice: 1,
                        },
                    ),
                },
                tx: TxEnv {
                    caller: 0x0000000000000000000000000000000000000000,
                    gas_limit: 18446744073709551615,
                    gas_price: 0,
                    transact_to: Call(
                        0x0000000000000000000000000000000000000000,
                    ),
                    value: 0,
                    data: 0x,
                    nonce: None,
                    chain_id: None,
                    access_list: [],
                    gas_priority_fee: None,
                    blob_hashes: [],
                    max_fee_per_blob_gas: None,
                    authorization_list: None,
                },
            },
            journaled_state: JournaledState {
                state: {},
                transient_storage: {},
                logs: [],
                depth: 0,
                journal: [
                    [],
                ],
                spec: LATEST,
                warm_preloaded_addresses: {},
            },
            db: CacheDB {
                accounts: {},
                contracts: {
                    0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470: LegacyAnalyzed(
                        LegacyAnalyzedBytecode {
                            bytecode: 0x00,
                            original_len: 0,
                            jump_table: JumpTable {
                                map: "00",
                            },
                        },
                    ),
                    0x0000000000000000000000000000000000000000000000000000000000000000: LegacyAnalyzed(
                        LegacyAnalyzedBytecode {
                            bytecode: 0x00,
                            original_len: 0,
                            jump_table: JumpTable {
                                map: "00",
                            },
                        },
                    ),
                },
                logs: [],
                block_hashes: {},
                db: EmptyDB { .. },
            },
            error: Ok(
                (),
            ),
            valid_authorizations: [],
        },
        precompiles: InnerEvmContext {
            env: Env {
                cfg: CfgEnv {
                    chain_id: 1,
                    kzg_settings: Default,
                    perf_analyse_created_bytecodes: Analyse,
                    limit_contract_code_size: None,
                },
                block: BlockEnv {
                    number: 0,
                    coinbase: 0x0000000000000000000000000000000000000000,
                    timestamp: 1,
                    gas_limit: 115792089237316195423570985008687907853269984665640564039457584007913129639935,
                    basefee: 0,
                    difficulty: 0,
                    prevrandao: Some(
                        0x0000000000000000000000000000000000000000000000000000000000000000,
                    ),
                    blob_excess_gas_and_price: Some(
                        BlobExcessGasAndPrice {
                            excess_blob_gas: 0,
                            blob_gasprice: 1,
                        },
                    ),
                },
                tx: TxEnv {
                    caller: 0x0000000000000000000000000000000000000000,
                    gas_limit: 18446744073709551615,
                    gas_price: 0,
                    transact_to: Call(
                        0x0000000000000000000000000000000000000000,
                    ),
                    value: 0,
                    data: 0x,
                    nonce: None,
                    chain_id: None,
                    access_list: [],
                    gas_priority_fee: None,
                    blob_hashes: [],
                    max_fee_per_blob_gas: None,
                    authorization_list: None,
                },
            },
            journaled_state: JournaledState {
                state: {},
                transient_storage: {},
                logs: [],
                depth: 0,
                journal: [
                    [],
                ],
                spec: LATEST,
                warm_preloaded_addresses: {},
            },
            db: CacheDB {
                accounts: {},
                contracts: {
                    0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470: LegacyAnalyzed(
                        LegacyAnalyzedBytecode {
                            bytecode: 0x00,
                            original_len: 0,
                            jump_table: JumpTable {
                                map: "00",
                            },
                        },
                    ),
                    0x0000000000000000000000000000000000000000000000000000000000000000: LegacyAnalyzed(
                        LegacyAnalyzedBytecode {
                            bytecode: 0x00,
                            original_len: 0,
                            jump_table: JumpTable {
                                map: "00",
                            },
                        },
                    ),
                },
                logs: [],
                block_hashes: {},
                db: EmptyDB { .. },
            },
            error: Ok(
                (),
            ),
            valid_authorizations: [],
        },
        ..
    },
    ..
}
